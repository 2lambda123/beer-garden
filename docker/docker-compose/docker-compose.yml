version: '3.5'

x-definitions: &env
    # IMPORTANT!!
    # Change this to whatever you want your namespace to be
    BG_NAMESPACES_LOCAL: docker

    # IMPORTANT!!
    # Change this to support both local and remote plugins
    # Should be resolvable from inside and outside the docker network
    BG_PUBLISH_HOSTNAME: localhost

    # Both still need these for now
    BG_DB_HOST: mongodb
    BG_DB_NAME: beer_garden_v3


services:
    brew-view:
        image: bgio/brew-view:v3
        networks:
            - bg-network
        ports:
            - "2337:2337"
            - "2338:2338"
        environment:
            <<: *env
            # For brew-view web host is really interface to bind
            BG_WEB_HOST: 0.0.0.0
            BG_BACKEND_HOST: bartender

            # We expose grafana for you, but you can change this to an
            # external grafana URL if you would like. It just adds a
            # link in our About section if it is defined.
            BG_METRICS_URL: http://localhost:3000
        depends_on:
            - mongodb
            - rabbitmq
            - bartender

    bartender:
        image: bgio/bartender:v3
        networks:
            - bg-network
        ports:
            - "9090:9090"
        volumes:
            - ./data/localplugins:/plugins
        environment:
            <<: *env

            BG_AMQ_HOST: rabbitmq
            BG_AMQ_CONNECTIONS_ADMIN_USER: beer_garden
            BG_AMQ_CONNECTIONS_ADMIN_PASSWORD: password
            BG_AMQ_CONNECTIONS_MESSAGE_USER: beer_garden
            BG_AMQ_CONNECTIONS_MESSAGE_PASSWORD: password

            BG_EVENT_BREW_VIEW_ENABLE: "true"
            BG_EVENT_BREW_VIEW_HOST: "brew-view"
        depends_on:
            - mongodb
            - rabbitmq

    grafana:
        image: grafana/grafana:5.2.3
        ports:
            - "3000:3000"
        volumes:
            - ./data/grafana/provisioning:/etc/grafana/provisioning
            - ./data/grafana/dashboards:/var/lib/grafana/dashboards
        networks:
            - bg-network
        depends_on:
            - prometheus

    mongodb:
        image: mongo:4.0
        networks:
            - bg-network
        volumes:
            - mongo-data:/data/db
            - mongo-config:/data/configdb
        restart: always

    prometheus:
        image: prom/prometheus:v2.3.2
        ports:
          - "9091:9090"
        networks:
            - bg-network
        volumes:
            - ./data/prometheus:/prometheus-data
        command:
            --config.file=/prometheus-data/prometheus.yml

    rabbitmq:
        image: rabbitmq:management-alpine
        networks:
            - bg-network
        environment:
            - RABBITMQ_DEFAULT_USER=beer_garden
            - RABBITMQ_DEFAULT_PASS=password
        ports:
            - "5672:5672"
            - "15672:15672"
        volumes:
            - rabbitmq-home:/var/lib/rabbitmq

networks:
    bg-network:
        driver: bridge
        name: bg-network

volumes:
    plugins:
    plugin-logs:
    mongo-data:
    mongo-config:
    rabbitmq-home:
