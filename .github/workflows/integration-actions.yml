name: Integration-Actions

on: pull_request

jobs:
  Plugin-Testing:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        python-version: ['3.7']
#        python-version: [ '2.7', '3.4', '3.5', '3.6', '3.7', '3.8', '3.9']
        os: ['ubuntu-18.04']
        plugin-brewtils: ['3.1.0']
#        plugin-brewtils: ['3.0.0','3.0.1','3.0.2','3.1.0']
      fail-fast: false

    name: Plugin Testing - OS ${{ matrix.os }} - Python ${{ matrix.python-version }} - Brewtils ${{matrix.plugin-brewtils}}
    steps:
      - uses: actions/checkout@v2

      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}



      - name: Update Docker Compose
        run: |
          ls
          ls test
          ls test/conf
          cp test/conf/docker-componse.yml docker/docker-compose/docker-compose.yml
        working-directory: ./

      - name: Run Docker Mongo
        run: docker-compose up -d mongodb
        working-directory: ./docker/docker-compose

      - name: Run Docker Rabbit
        run: docker-compose up -d rabbitmq
        working-directory: ./docker/docker-compose

      - name: Checkout Local Plugins
        uses: actions/checkout@v2
        with:
          repository: beer-garden/example-plugins
          path: ./docker/docker-compose/data/localplugins

      - name: Verify Local Plugins
        run: ls ./docker/docker-compose/data/localplugins

      - name: Run Docker Beer Garden
        run: docker-compose up -d beer-garden
        working-directory: ./docker/docker-compose

      - name: Check Docker Containers
        run: docker ps

      - name: Wait for Beer Garden to intialize
        run: sleep 30

      - name: Grab logs from Beer-Garden
        run: docker-compose logs --tail 100 beer-garden
        working-directory: ./docker/docker-compose

      - name: Uninstall Brewtils
        run: pip uninstall brewtils

      - name: Install Test Version of Brewtils
        run: pip install brewtils==${{matrix.plugin-brewtils}}

      - name: Install Python Deps
        run: pip install -r requirements.txt
        working-directory: ./test/integration

      - name: Test Plugins
        run: make test-plugins
        working-directory: ./test/integration

      - name: Shutdown Docker Containers
        run: docker-compose stop
        working-directory: ./docker/docker-compose

  Garden-Testing:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: ['ubuntu-18.04']
        python-version: ['3.7']
        child-garden: ['3']
#        child-garden: ['3.0.0','3.0.1','3.0.2','3.1.0']
      fail-fast: false

    name: Garden Testing - OS ${{ matrix.os }} - Python ${{ matrix.python-version }} - Child Garden ${{matrix.child-garden}}
    steps:
        - uses: actions/checkout@v2

        - name: Setup python
          uses: actions/setup-python@v2
          with:
            python-version: ${{ matrix.python-version }}

        - name: Update Docker Compose
          run: cp test/conf/docker-componse.yml docker/docker-compose/docker-compose.yml
          working-directory: ./

        - name: Update Child Docker Compose
          run: cp test/conf/child-docker-componse.yml docker/docker-compose/
          working-directory: ./

        - name: Run Docker Mongo
          run: docker-compose up -d mongodb
          working-directory: ./docker/docker-compose

        - name: Run Docker Rabbit
          run: docker-compose up -d rabbitmq
          working-directory: ./docker/docker-compose

        - name: Checkout Local Plugins
          uses: actions/checkout@v2
          with:
            repository: beer-garden/example-plugins
            path: ./docker/docker-compose/data/localplugins

        - name: Verify Local Plugins
          run: ls ./docker/docker-compose/data/localplugins

#        - name: Set Timezone
#          run: sed -i 's/#TZ:/TZ:/g' docker-compose.yml
#          working-directory: ./docker/docker-compose




        - name: Run Docker Beer Garden
          run: docker-compose up -d beer-garden
          working-directory: ./docker/docker-compose

#        - name: Clone Docker-Compose
#          run: cp docker-compose.yml child-docker-compose.yml
#          working-directory: ./docker/docker-compose
#
#        - name: Set Child Docker Image
#          run: sed -i 's/bgio/beer-garden:3/bgio/beer-garden:${{ matrix.child-garden }}/g' child-docker-compose.yml
#          working-directory: ./docker/docker-compose
#
#        - name: Set Child Garden Name
#          run: sed -i 's/BG_GARDEN_NAME: docker/BG_GARDEN_NAME: child/g' child-docker-compose.yml
#          working-directory: ./docker/docker-compose
#
#        - name: Set Child Parent Enabled
#          run: sed -i 's/BG_PARENT_HTTP_ENABLE: "false"/BG_PARENT_HTTP_ENABLE: "true"/g' child-docker-compose.yml
#          working-directory: ./docker/docker-compose
#
#        - name: Set Child HTTP Ports
#          run: sed -i 's/2337:2337/2347:2337/g' child-docker-compose.yml
#          working-directory: ./docker/docker-compose
#
#        - name: Set Child HTTP Ports
#          run: sed -i 's/2338:2338/2348:2338/g' child-docker-compose.yml
#          working-directory: ./docker/docker-compose
#
#        - name: Set Child Mongo Space
#          run: sed -i 's/BG_DB_NAME: beer_garden_v3/BG_DB_NAME: beer_garden_v3_child/g' child-docker-compose.yml
#          working-directory: ./docker/docker-compose
#
#        - name: Set Child RabbitMQ Exchange
#          run: sed -i 's/BG_MQ_EXCHANGE: beer_garden/BG_MQ_EXCHANGE: beer_garden_child/g' child-docker-compose.yml
#          working-directory: ./docker/docker-compose

        - name: Run Docker Beer Garden Child
          run: RELEASE=${{matrix.child-garden}} docker-compose -f child-docker-compose.yml up -d beer-garden
          working-directory: ./docker/docker-compose

        - name: Grab logs from Beer-Garden
          run: docker-compose -f child-docker-compose.yml logs --tail 100 beer-garden
          working-directory: ./docker/docker-compose